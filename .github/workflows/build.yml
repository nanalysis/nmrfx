name: Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the these branches.
on:
  push:
    branches:
      - master
      - 'epic/**'
      - 'release/**'
  pull_request:
    branches:
      - master
      - 'epic/**'
      - 'release/**'

# Set environment variables
env:
  BUILD_ENV: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          token: ${{ secrets.SUBMODULE_ACCESS_TOKEN }}
          # Check-out the submodules as well
          submodules: 'recursive'

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'maven'

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Clean compile
        run: mvn -f pom.xml clean compile

      # Ignore test failures so that all tests are run
      # The publish report step will take care of failing the build if needed
      # Use jacoco to prepare test coverage report for sonar
      - name: Execute tests
        run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent test -Dmaven.test.failure.ignore=true

      - name: Publish test report
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
          fail_if_no_tests: true

      - name: Generate test coverage report
        run: mvn org.jacoco:jacoco-maven-plugin:report

      # Must be done before calling formatter & sonar, otherwise BOM project can be out of date
      # Skip assembly, it is done in the package phase for NMRfx
      # Otherwise, it takes a lot of space (6Gb) AND be copied to the local repository (+3Gb)
      - name: Install artifacts locally without assembly
        run: mvn -f pom.xml install -Dmaven.test.skip=true -Dassembly.skipAssembly=true

      - name: Analyze with sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=nanalysis_nmrfx

      - name: Trigger private installer build
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'nanalysis',
              repo: 'nmrfx-private',
              workflow_id: 'build-installers.yml',
              ref: 'master',
              inputs: {
                nmrfx_commit_hash: '${{ github.sha }}',
                nmrfx_head_ref: '${{ github.head_ref }}',
                nmrfx_ref: '${{ github.ref }}'
              }
            })